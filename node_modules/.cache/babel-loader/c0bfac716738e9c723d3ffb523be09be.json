{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/battleship-battleship-jaa/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport './App.css';\nvar shipsPosition = Array(100).fill(null);\n\nfor (var i = 0; i < this.state.remainingShips; i++) {\n  shipsPosition[i] = \"S\";\n}\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nshuffle(shipsPosition);\nconsole.log(shipsPosition);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = index => {\n      var squares = [...this.state.squares];\n      squares[index] = this.state.hiddenShips[index] ? this.state.hiddenShips[index] : \"X\";\n      this.setState({\n        squares: squares,\n        count: this.state.count - 1,\n        hiddenShips: this.state.hiddenShips - 1\n      }, () => {\n        if (this.state.count === 0) {\n          setTimeout(() => {\n            alert(\"you lose\");\n          }, 300);\n        } else if (this.state.hiddenShips === \"S\" && this.state.hiddenShips === 0) {\n          setTimeout(() => {\n            alert(\"you sank all the ships\");\n          }, 300);\n        }\n      });\n    };\n\n    this.state = {\n      squares: Array(100).fill(null),\n      hiddenShips: shipsPosition,\n      count: 35,\n      remainingShips: 5\n    };\n  }\n\n  render() {\n    let square = this.state.squares.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        value: value,\n        key: index,\n        onClick: () => this.handleChange(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Battleship App\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, square));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/battleship-battleship-jaa/src/App.js"],"names":["React","Component","Square","shipsPosition","Array","fill","i","state","remainingShips","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","console","log","App","constructor","props","handleChange","index","squares","hiddenShips","setState","count","setTimeout","alert","render","square","map","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nvar shipsPosition = Array(100).fill(null)\nfor (var i = 0; i < this.state.remainingShips; i++) {\n  shipsPosition[i] = \"S\"\n}\n\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n  while (0!== currentIndex){\n    randomIndex = Math.floor(Math.random()* currentIndex);\n    currentIndex -= 1\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue\n  }\n  return array\n}\n\nshuffle(shipsPosition)\nconsole.log(shipsPosition);\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n\n\n  this.state = {\n    squares:Array(100).fill(null),\n    hiddenShips: shipsPosition,\n    count: 35,\n    remainingShips: 5,\n  }\n}\n\nhandleChange= (index) => {\n  var squares = [...this.state.squares]\n  squares[index] = this.state.hiddenShips[index] ? this.state.hiddenShips[index] : \"X\"\n  this.setState({squares: squares, count: this.state.count -1, hiddenShips: this.state.hiddenShips -1}, ()=> {\n    if(this.state.count === 0) {\n      setTimeout(() => {\n        alert(\"you lose\")}, 300)\n\n    }\n    else if(this.state.hiddenShips === \"S\" && this.state.hiddenShips === 0 ){\n      setTimeout(() => {\n        alert(\"you sank all the ships\")}, 300)\n\n    }\n  })\n}\n\n  render(){\n    let square = this.state.squares.map((value, index)=> {\n      return (\n        <Square value={value} key={index} onClick={() => this.handleChange(index)}/>\n      )\n    })\n\n    return(\n      <React.Fragment>\n\n        <h1>Battleship App</h1>\n        <div id= \"game-board\">\n        {square}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}